// vite.config.ts
import { defineConfig } from "file:///D:/1-AI%E4%B8%89%E5%8F%B7/AI-NEWS-H5/ai-world-news/node_modules/vite/dist/node/index.js";
import react from "file:///D:/1-AI%E4%B8%89%E5%8F%B7/AI-NEWS-H5/ai-world-news/node_modules/@vitejs/plugin-react-swc/index.mjs";
import path from "path";
import { componentTagger } from "file:///D:/1-AI%E4%B8%89%E5%8F%B7/AI-NEWS-H5/ai-world-news/node_modules/lovable-tagger/dist/index.js";
var __vite_injected_original_dirname = "D:\\1-AI\u4E09\u53F7\\AI-NEWS-H5\\ai-world-news";
var vite_config_default = defineConfig(({ mode }) => ({
  base: "/",
  // 使用自定义域名，直接使用根路径
  server: {
    host: "::",
    port: 8080
  },
  build: {
    rollupOptions: {
      output: {
        // 添加时间戳到文件名，确保缓存更新
        entryFileNames: `assets/[name]-[hash]-${Date.now()}.js`,
        chunkFileNames: `assets/[name]-[hash]-${Date.now()}.js`,
        assetFileNames: `assets/[name]-[hash]-${Date.now()}.[ext]`
      }
    }
  },
  plugins: [
    react(),
    mode === "development" && componentTagger()
  ].filter(Boolean),
  resolve: {
    alias: {
      "@": path.resolve(__vite_injected_original_dirname, "./src")
    }
  }
}));
export {
  vite_config_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsidml0ZS5jb25maWcudHMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbImNvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9kaXJuYW1lID0gXCJEOlxcXFwxLUFJXHU0RTA5XHU1M0Y3XFxcXEFJLU5FV1MtSDVcXFxcYWktd29ybGQtbmV3c1wiO2NvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9maWxlbmFtZSA9IFwiRDpcXFxcMS1BSVx1NEUwOVx1NTNGN1xcXFxBSS1ORVdTLUg1XFxcXGFpLXdvcmxkLW5ld3NcXFxcdml0ZS5jb25maWcudHNcIjtjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfaW1wb3J0X21ldGFfdXJsID0gXCJmaWxlOi8vL0Q6LzEtQUklRTQlQjglODklRTUlOEYlQjcvQUktTkVXUy1INS9haS13b3JsZC1uZXdzL3ZpdGUuY29uZmlnLnRzXCI7aW1wb3J0IHsgZGVmaW5lQ29uZmlnIH0gZnJvbSBcInZpdGVcIjtcclxuaW1wb3J0IHJlYWN0IGZyb20gXCJAdml0ZWpzL3BsdWdpbi1yZWFjdC1zd2NcIjtcclxuaW1wb3J0IHBhdGggZnJvbSBcInBhdGhcIjtcclxuaW1wb3J0IHsgY29tcG9uZW50VGFnZ2VyIH0gZnJvbSBcImxvdmFibGUtdGFnZ2VyXCI7XHJcblxyXG4vLyBodHRwczovL3ZpdGVqcy5kZXYvY29uZmlnL1xyXG5leHBvcnQgZGVmYXVsdCBkZWZpbmVDb25maWcoKHsgbW9kZSB9KSA9PiAoe1xyXG4gIGJhc2U6ICcvJywgLy8gXHU0RjdGXHU3NTI4XHU4MUVBXHU1QjlBXHU0RTQ5XHU1N0RGXHU1NDBEXHVGRjBDXHU3NkY0XHU2M0E1XHU0RjdGXHU3NTI4XHU2ODM5XHU4REVGXHU1Rjg0XHJcbiAgc2VydmVyOiB7XHJcbiAgICBob3N0OiBcIjo6XCIsXHJcbiAgICBwb3J0OiA4MDgwLFxyXG4gIH0sXHJcbiAgYnVpbGQ6IHtcclxuICAgIHJvbGx1cE9wdGlvbnM6IHtcclxuICAgICAgb3V0cHV0OiB7XHJcbiAgICAgICAgLy8gXHU2REZCXHU1MkEwXHU2NUY2XHU5NUY0XHU2MjMzXHU1MjMwXHU2NTg3XHU0RUY2XHU1NDBEXHVGRjBDXHU3ODZFXHU0RkREXHU3RjEzXHU1QjU4XHU2NkY0XHU2NUIwXHJcbiAgICAgICAgZW50cnlGaWxlTmFtZXM6IGBhc3NldHMvW25hbWVdLVtoYXNoXS0ke0RhdGUubm93KCl9LmpzYCxcclxuICAgICAgICBjaHVua0ZpbGVOYW1lczogYGFzc2V0cy9bbmFtZV0tW2hhc2hdLSR7RGF0ZS5ub3coKX0uanNgLFxyXG4gICAgICAgIGFzc2V0RmlsZU5hbWVzOiBgYXNzZXRzL1tuYW1lXS1baGFzaF0tJHtEYXRlLm5vdygpfS5bZXh0XWBcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH0sXHJcbiAgcGx1Z2luczogW1xyXG4gICAgcmVhY3QoKSxcclxuICAgIG1vZGUgPT09ICdkZXZlbG9wbWVudCcgJiZcclxuICAgIGNvbXBvbmVudFRhZ2dlcigpLFxyXG4gIF0uZmlsdGVyKEJvb2xlYW4pLFxyXG4gIHJlc29sdmU6IHtcclxuICAgIGFsaWFzOiB7XHJcbiAgICAgIFwiQFwiOiBwYXRoLnJlc29sdmUoX19kaXJuYW1lLCBcIi4vc3JjXCIpLFxyXG4gICAgfSxcclxuICB9LFxyXG59KSk7XHJcblxyXG4vLyBcdTc1MUZcdTYyMTBSU1MgZmVlZFxyXG5mdW5jdGlvbiBnZW5lcmF0ZVJTU0ZlZWQobmV3c0l0ZW1zKSB7XHJcbiAgY29uc3Qgc2l0ZVVybCA9ICdodHRwczovL2FpLXdvcmxkLW5ld3MuY29tJztcclxuICBjb25zdCBzaXRlVGl0bGUgPSAnQUlcdTRFMTZcdTc1NENcdTY1QjBcdTk1RkInO1xyXG4gIGNvbnN0IHNpdGVEZXNjcmlwdGlvbiA9ICdcdTY3MDBcdTY1QjBBSVx1OEQ0NFx1OEJBRlx1NEUwRVx1NkRGMVx1NUVBNlx1NjJBNVx1OTA1Myc7XHJcbiAgXHJcbiAgY29uc3QgaXRlbXMgPSBuZXdzSXRlbXMuc2xpY2UoMCwgMjApLm1hcChpdGVtID0+IGBcclxuICAgIDxpdGVtPlxyXG4gICAgICA8dGl0bGU+PCFbQ0RBVEFbJHtpdGVtLnRpdGxlfV1dPjwvdGl0bGU+XHJcbiAgICAgIDxkZXNjcmlwdGlvbj48IVtDREFUQVske2l0ZW0uc3VtbWFyeSB8fCBpdGVtLmNvbnRlbnR9XV0+PC9kZXNjcmlwdGlvbj5cclxuICAgICAgPGxpbms+JHtpdGVtLm9yaWdpbmFsVXJsfTwvbGluaz5cclxuICAgICAgPGd1aWQ+JHtpdGVtLmlkfTwvZ3VpZD5cclxuICAgICAgPHB1YkRhdGU+JHtuZXcgRGF0ZShpdGVtLnB1Ymxpc2hlZEF0KS50b1VUQ1N0cmluZygpfTwvcHViRGF0ZT5cclxuICAgICAgPHNvdXJjZSB1cmw9XCIke3NpdGVVcmx9XCI+JHtpdGVtLnNvdXJjZX08L3NvdXJjZT5cclxuICAgIDwvaXRlbT5cclxuICBgKS5qb2luKCcnKTtcclxuXHJcbiAgcmV0dXJuIGA8P3htbCB2ZXJzaW9uPVwiMS4wXCIgZW5jb2Rpbmc9XCJVVEYtOFwiPz5cclxuPHJzcyB2ZXJzaW9uPVwiMi4wXCIgeG1sbnM6YXRvbT1cImh0dHA6Ly93d3cudzMub3JnLzIwMDUvQXRvbVwiPlxyXG4gIDxjaGFubmVsPlxyXG4gICAgPHRpdGxlPjwhW0NEQVRBWyR7c2l0ZVRpdGxlfV1dPjwvdGl0bGU+XHJcbiAgICA8ZGVzY3JpcHRpb24+PCFbQ0RBVEFbJHtzaXRlRGVzY3JpcHRpb259XV0+PC9kZXNjcmlwdGlvbj5cclxuICAgIDxsaW5rPiR7c2l0ZVVybH08L2xpbms+XHJcbiAgICA8YXRvbTpsaW5rIGhyZWY9XCIke3NpdGVVcmx9L3Jzcy54bWxcIiByZWw9XCJzZWxmXCIgdHlwZT1cImFwcGxpY2F0aW9uL3Jzcyt4bWxcIi8+XHJcbiAgICA8bGFuZ3VhZ2U+emgtQ048L2xhbmd1YWdlPlxyXG4gICAgPGxhc3RCdWlsZERhdGU+JHtuZXcgRGF0ZSgpLnRvVVRDU3RyaW5nKCl9PC9sYXN0QnVpbGREYXRlPlxyXG4gICAgJHtpdGVtc31cclxuICA8L2NoYW5uZWw+XHJcbjwvcnNzPmA7XHJcbn0iXSwKICAibWFwcGluZ3MiOiAiO0FBQWdULFNBQVMsb0JBQW9CO0FBQzdVLE9BQU8sV0FBVztBQUNsQixPQUFPLFVBQVU7QUFDakIsU0FBUyx1QkFBdUI7QUFIaEMsSUFBTSxtQ0FBbUM7QUFNekMsSUFBTyxzQkFBUSxhQUFhLENBQUMsRUFBRSxLQUFLLE9BQU87QUFBQSxFQUN6QyxNQUFNO0FBQUE7QUFBQSxFQUNOLFFBQVE7QUFBQSxJQUNOLE1BQU07QUFBQSxJQUNOLE1BQU07QUFBQSxFQUNSO0FBQUEsRUFDQSxPQUFPO0FBQUEsSUFDTCxlQUFlO0FBQUEsTUFDYixRQUFRO0FBQUE7QUFBQSxRQUVOLGdCQUFnQix3QkFBd0IsS0FBSyxJQUFJLENBQUM7QUFBQSxRQUNsRCxnQkFBZ0Isd0JBQXdCLEtBQUssSUFBSSxDQUFDO0FBQUEsUUFDbEQsZ0JBQWdCLHdCQUF3QixLQUFLLElBQUksQ0FBQztBQUFBLE1BQ3BEO0FBQUEsSUFDRjtBQUFBLEVBQ0Y7QUFBQSxFQUNBLFNBQVM7QUFBQSxJQUNQLE1BQU07QUFBQSxJQUNOLFNBQVMsaUJBQ1QsZ0JBQWdCO0FBQUEsRUFDbEIsRUFBRSxPQUFPLE9BQU87QUFBQSxFQUNoQixTQUFTO0FBQUEsSUFDUCxPQUFPO0FBQUEsTUFDTCxLQUFLLEtBQUssUUFBUSxrQ0FBVyxPQUFPO0FBQUEsSUFDdEM7QUFBQSxFQUNGO0FBQ0YsRUFBRTsiLAogICJuYW1lcyI6IFtdCn0K
